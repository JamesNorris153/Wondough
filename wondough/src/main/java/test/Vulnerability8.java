package wondough;

import java.sql.*;

public class Vulnerability8 {

	// run tests for vulnerability 8
	public void test(WondoughUser hacker) {
		// initialise the user hacker for the tests
		try {
			this.initialiseTests(hacker);
		} catch (SQLException e) {
			System.out.println("failed" + e.toString());
		}
		String test1 = this.testUserCannotTransferMoreThanAllowed(hacker);
		String test2 = this.testUserCanTransferAllowed(hacker);

		System.out.println("Vulnerability 8: \tTest 1 " + test1);
		System.out.println("\t\t\tTest 2 " + test2);
		System.out.println();
	}

	// initialises tests for vulnerability 8
	private void initialiseTests(WondoughUser hacker) throws SQLException {
		// get the database
		String url = "jdbc:sqlite:" + "wondough.db";
        Connection connection = DriverManager.getConnection(url);

		// prepare statement
		PreparedStatement creditStmt = null;
        String creditQuery = "INSERT INTO transactions (uid,value,description) VALUES (?,?,?)";

		try {
			// add Â£100 to the account for testing
            creditStmt = connection.prepareStatement(creditQuery);

            creditStmt.setInt(1, hacker.getID());
            creditStmt.setFloat(2, (float) 100.0);
            creditStmt.setString(3, "test");

            creditStmt.executeUpdate();
        } catch (SQLException e) {
            System.out.println("failed" + e.toString());
			return;
        } finally {
            if (creditStmt != null) { creditStmt.close(); }
        }
	}

	// test to verify if user is prevented from transferring more than avaible
	private String testUserCannotTransferMoreThanAllowed(WondoughUser hacker) {
		// get database
		DbConnection db = Program.getInstance().getDbConnection();
		try {
			// attempt to transfer more money than available
			if (db.createTransaction(hacker.getID(), 1, "test", (float) 101.0) == true) {
				return "failed"; // if transaction occurs, fail test
			} else {
				return "passed"; // else pass test
			}
		} catch (SQLException e) {
			return "failed" + e.toString();
		}
	}

	// test to verify if user is prevented from using available balance
	private String testUserCanTransferAllowed(WondoughUser hacker) {
		// get database
		DbConnection db = Program.getInstance().getDbConnection();
		try {
			// attempt to transfer all the money in the account
			if (db.createTransaction(hacker.getID(), 1, "test", (float) 100.0) == true) {
				return "passed"; // if transaction occurs, pass test
			} else {
				return "failed"; // else fail test
			}
		} catch (SQLException e) {
			return "failed" + e.toString();
		}
	}
}
